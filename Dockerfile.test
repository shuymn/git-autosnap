# syntax=docker/dockerfile:1.18@sha256:dabfc0969b935b2080555ace70ee69a5261af8a8f1b4df97b9e7fbcf6722eddf

# Test image for container-based integration tests (feature: container-tests)
# - Contains: git, bash, libgit2 runtime, and the git-autosnap binary in PATH
# - Tag this image as: git-autosnap-test:latest

FROM rust:1-bullseye@sha256:d7cb9ffcc56d9f1a6334f54aae6614efe2814516db17e3acd4b88293dd8dc31c AS builder

ENV DEBIAN_FRONTEND=noninteractive
# Enable effective apt caching with BuildKit cache mounts
RUN rm -f /etc/apt/apt.conf.d/docker-clean \
    && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
       > /etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
      git bash ca-certificates pkg-config libssl-dev libgit2-dev

WORKDIR /src

# Cache deps first (BuildKit cache mounts for Cargo)
COPY Cargo.toml Cargo.lock ./
RUN --mount=type=cache,id=cargo-registry,target=/usr/local/cargo/registry \
    --mount=type=cache,id=cargo-git-db,target=/usr/local/cargo/git/db \
    --mount=type=cache,id=rust-target,target=/src/target \
    mkdir -p src && echo "fn main(){}" > src/main.rs \
    && cargo build --release || true

# Build the actual binary (reuse Cargo caches)
COPY . .
RUN --mount=type=cache,id=cargo-registry,target=/usr/local/cargo/registry \
    --mount=type=cache,id=cargo-git-db,target=/usr/local/cargo/git/db \
    --mount=type=cache,id=rust-target,target=/src/target \
    cargo install --path . --locked

# Final test image â€” keep toolchain to avoid runtime lib mismatches and ease debugging
FROM rust:1-bullseye@sha256:d7cb9ffcc56d9f1a6334f54aae6614efe2814516db17e3acd4b88293dd8dc31c
ENV DEBIAN_FRONTEND=noninteractive
# Use BuildKit cache mounts for apt in the runtime layer as well
RUN rm -f /etc/apt/apt.conf.d/docker-clean \
    && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
       > /etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
      git bash ca-certificates libgit2-dev

# Copy the installed binary from builder and expose in PATH
COPY --from=builder /usr/local/cargo/bin/git-autosnap /usr/local/bin/git-autosnap

# Helpful defaults for tests; the container stays alive and ready for exec
ENV PATH="/usr/local/bin:${PATH}" \
    GIT_CONFIG_NOSYSTEM=1 \
    HOME=/test-home
RUN mkdir -p "$HOME" && chmod 755 "$HOME"

# Set default git config for tests
RUN git config --global init.defaultBranch main && \
    git config --global user.email "test@example.com" && \
    git config --global user.name "Test User"

# Print a ready message then sleep forever so testcontainers can exec into it
CMD ["bash", "-lc", "echo ready; sleep infinity"]
